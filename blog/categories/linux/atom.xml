<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Robin David]]></title>
  <link href="http://www.robindavid.fr/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://www.robindavid.fr/"/>
  <updated>2014-03-02T11:00:09+00:00</updated>
  <id>http://www.robindavid.fr/</id>
  <author>
    <name><![CDATA[Robin David]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Use Debootstrap]]></title>
    <link href="http://www.robindavid.fr/blog/2011/08/10/use-debootstrap/"/>
    <updated>2011-08-10T00:00:00+00:00</updated>
    <id>http://www.robindavid.fr/blog/2011/08/10/use-debootstrap</id>
    <content type="html"><![CDATA[<p>&nbsp;</p>

<ul>
    <li><strong>parted</strong>
Create partition in primary/extented in mbr/gpt...</li>
&nbsp;
    <li> <strong>mkfs.ext4 -L MyPartition /dev/sda1</strong>
Create the file system on the main system partition</li>
&nbsp;
    <li> <strong>mkdir /media/debian</strong>
Create a temp directory in which the partition will be mounted and the system installed</li>
&nbsp;
    <li> <strong>mount /dev/sda1 /media/debian</strong>
Mount the partition in the created directory</li>
&nbsp;
    <li> <strong>debootstrap wheezy /media/debian http://ftp.fr.debian.org/debian</strong>
Make a deboostrap of the wheezy version of debian(could be changed as you wish), from the nearest repository.</li>
&nbsp;
    <li> <strong>mount -o bind /dev /media/debian/dev</strong>
Bind dev</li>
&nbsp;
    <li> <strong>mount -o bind /dev/pts /media/debian/dev/pts</strong>
Bind /dev/pts</li>
&nbsp;
    <li> <strong>mount sysfs -t sysfs /media/debian/sys</strong>
mount sysfs</li>
&nbsp;
    <li> <strong>mount proc -t proc /media/debian/proc</strong>
Bind proc</li>
&nbsp;
    <li> <strong>touch /media/debian/etc/debian_chroot</strong>
Allow to show on the prompt if chrooted or not (avoid misuse)
<span style="color: #339966;">Ex: echo "mychroot" </span></li>
&nbsp;
    <li> <strong>chroot /media/debian</strong>
Now chrooted !</li>
&nbsp;
    <li> <strong>aptitude update</strong>
<span style="color: #0000ff;">Note: All the following operation uses host kernel </span></li>
&nbsp;
    <li> <strong>aptitude install locales console-data vim bash-completion dialog</strong>
locales language
console-data (keyboard)</li>
&nbsp;
    <li> <strong>dpkg-reconfigure locales</strong>
setup language</li>
&nbsp;
    <li> #<strong>aptitude install eatmydata</strong>
To improve performance of download and install packets by hooking sync kernel calls</li>
&nbsp;
    <li> <strong>vim /etc/bash.bashrc</strong>
You should uncomment completion stuff</li>
&nbsp;
    <li> <strong>source /etc/bash_completion</strong>
Apply changes</li>
&nbsp;
    <li> <strong>aptitude install linux-image-xxxx-amd64 grub</strong>
Put new kernel and setup grub entirely
For hard drive choose sda not sda1, and do the following command if the install don't do it itself.
grub-install /dev/sda
update-grub
update-initramfs</li>
    <li></li>
&nbsp;
    <li> <strong>aptitude install gpm</strong>
to get the mouse in console, to easily do copy past
<span style="color: #0000ff;">Note: Ignore errors if it happens</span></li>
&nbsp;
    <li> <strong>vim /etc/hostname</strong>
if needed/wanted</li>
&nbsp;
    <li> <strong>vim /etc/network/interfaces</strong>
Put in:
auto lo
iface lo inet loopback
<span style="color: #0000ff;">Note: Otherwise lots of applications will crash because dbus and others applications use local network and if he doesn't find it in etc/network the system will become unstable. </span></li>
&nbsp;
    <li> <strong>vim /etc/fstab</strong>
Adapt depending of needs
UUID=xxxx   /   btrfs   defaults... 0   0
root 1, home 2, tmp 0
<span style="color: #0000ff;">Note you can use blkid /dev/sda1 to get uuid of partitions.</span></li>
&nbsp;
    <li> <strong>passwd</strong>
Otherwise at the reboot a passwd will be asked without being set before.</li>
&nbsp;
    <li> <strong>#Bonus tasksel</strong>
<span style="color: #339966;">ex: tasksel install standard</span>
This install standard utilities like less, top ..</li>
&nbsp;
    <li> <strong>exit</strong>
Back on host !</li>
&nbsp;
    <li>Umount everything or directly reboot</li>
</ul>


<p>Enjoy you&rsquo;re new system :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[xdotool + xwininfo Memo]]></title>
    <link href="http://www.robindavid.fr/blog/2011/04/24/xdotool-xwininfo-memo/"/>
    <updated>2011-04-24T00:00:00+00:00</updated>
    <id>http://www.robindavid.fr/blog/2011/04/24/xdotool-xwininfo-memo</id>
    <content type="html"><![CDATA[<p>First of all, I know that the text written below could be found in the xdotool man, but this summarize it and allow a quick acess to few examples and the more important arguments.</p>

<p>I discovered it quite randomly by looking for a way to access keyboard keys in python. I finally analysed what we could do with xdotool it is really amazing. xdotool is a software which allow manipulate keyboard, mouse and windows of the X server. It can by this way completely replace the user in front of his computer, and allow automate tasks that cannot be done in command line. It is the Unix equivalent for AutoIt in Windows. This increase considerably the power of bash scripts and consolidate my idea that we can do almost everything in bash. Below the more interesting commands:</p>

<p>&nbsp;</p>

<ul>
    <li><strong>xdotool getactivewindow</strong>
Return the active window</li>
<br/>
    <li><strong>xwininfo -id 2784333</strong>
Give information about the given window, like size, coordinate and graphical aspect</li>
<br/>
    <li> <strong>xdotool getmouselocation --shell</strong>
Return the mouse location, with X, Y and the Display Number(could have multiple X server)
--sheel format the returned string to be "eval" if needed.

The script below show in live the mouse position.
<pre>
<span style="color: #009900;">#!/bin/bash</span>

<span style="color: #0000ff;">while</span> ((<span style="color: #ff0000;">1</span>)) ; <span style="color: #0000ff;">do</span>
        eval $(xdotool getmouselocation --shell)
        echo -e <span style="color: #888888;">"X=$X\tY=$Y\r\c"</span>
<span style="color: #0000ff;">done</span></pre></li>
<br/>
    <li>Send Keys:
<strong>xdotool key F2</strong>
It exist also keydown, and keyup which I think could be understood as keypressed and key released(not tested)</li>
<br/>
    <li>Type text:
<strong>xdotool type 'Hello world!'</strong>Type the given text as if it were the user.</li>
<br/>
    <li>Mouse move:
<strong>xdotool mousemove 0 0</strong>
Move the mouse cursor to the position x=0, y=0</li>
<br/>
    <li><strong>xdotool mousemove_relative 10 10</strong>
Same as mousemove but relatively to the current position of the mouse</li>
<br/>
    <li>Click:
<strong>xdotool click 1</strong>
<span style="color: #0000ff;">Note 1:Left, 2:Middle, 3:Right, 4:wheel up, 5:wheel down</span>
There is also mouseup and mousedown (which is the same than keys of keyboard)</li>
<br/>
    <li>Search
<strong>xdotool search --onlyvisible --name "^Opera$"</strong>
Research in window name with the regex pattern given
The other interesting args are:
--pid PID #specify a pid(more accurate than string search and unique)</li>
<br/>
    <li><strong>getwindowfocus</strong> Return the window focused</li>
<br/>
    <li><strong>xdpyinfo | awk '/dimensions:/ {split($2,nf,"x");print "width="nf[1];print "height="nf[2];exit }'</strong>
This have nothing to see with xdotool but return screen resolution in a formated way to be eval in bash</li>
<br/>
    <li><strong>xdotool windowsize 3447722 300 300</strong> Change the size of the given window</li>
<br/>
    <li><strong>xdotool windowmove 34734345 200 200</strong>
Move the given window to the given position</li>
<br/>
    <li><strong>xdotool windowmap 34734345 200 200</strong>
Put the given window on the foreground(normally)
The reverse is "windowunmap" which hide the given window</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fix Wireless Connection in CLI]]></title>
    <link href="http://www.robindavid.fr/blog/2010/11/29/fix-wireless-in-cli/"/>
    <updated>2010-11-29T00:00:00+00:00</updated>
    <id>http://www.robindavid.fr/blog/2010/11/29/fix-wireless-in-cli</id>
    <content type="html"><![CDATA[<h2>WEP connection</h2>


<p>We suppose in this example that our wireless interface is wlan0.</p>

<br/>


<p><strong>iwconfig wlan0 mode managed key [WEP key]<br/>
iwconfig wlan0 essid &ldquo;[ESSID]&rdquo;</strong></p>

<br/>


<p>If you use DHCP do:<br/>
<strong>dhclient wlan0</strong><br/>
else do:<br/>
<strong>ifconfig wlan0 [IP address] netmask [subnetmask]<br/>
route add default gw [IP of default gateway]</strong><br/></p>

<br/>


<p><span style="color: #0000ff;"> (Configure your default gateway; usually the IP of the Access Point)</span><br/><br/></p>

<p><strong>echo nameserver [IP address of DNS server]  &gt;&gt;  /etc/resolve.conf</strong><br/></p>

<p><span style="color: #0000ff;"> (Configure your DNS server)</span></p>

<br/><br/>


<h2>WPA Connection</h2>


<p>The WPA is harder than wep, because you have to define the WPA type (PSK&hellip;).</p>

<p>To make it work you need first to install two packages: <strong>wireless-tools wpasupplicant.</strong><br/><br/></p>

<p>Edit <strong>/etc/network/interfaces</strong> and put:</p>

<p style="padding-left: 30px;">If you are in DHCP:</p>


<p style="padding-left: 60px;"><strong>auto wlan0</strong></p>


<p style="padding-left: 60px;"><strong> </strong><strong>iface wlan0 inet dhcp</strong><strong> </strong></p>


<p style="padding-left: 90px;"><strong>wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf</strong></p>


<p style="padding-left: 30px;">If you are in static:</p>


<p style="padding-left: 60px;"><strong>auto wlan0</strong><br/>
<strong>iface eth0 inet static</strong><br/>
<strong style="padding-left: 30px;">address 192.168.0.100v</strong><br/>
<strong style="padding-left: 30px;" >network 192.168.0.0</strong><br/>
<strong style="padding-left: 30px;" >netmask 255.255.255.0</strong><br/>
<strong style="padding-left: 30px;" >broadcast 192.168.0.255</strong><br/>
<span style="color: #0000ff;">#Of course depending of your network your values can be differents</span></p>


<br/>


<p>Now edit <strong>/etc/wpa_supplicant/wpa_supplicant.conf</strong> and put:<br/></p>

<p><strong>ctrl_interface=/var/run/wpa_supplicant</strong><strong><br/>
</strong><strong>eapol_version=1</strong><strong><br/>
</strong><strong>ap_scan=1</strong><strong><br/>
</strong><strong>fast_reauth=1</strong><strong><br/>
</strong></p>

<br/>


<p><strong>network={</strong><strong><br/></p>

<p></strong><strong> ssid=nameofNetwork</strong><strong><br/>
</strong><strong> scan_ssid=1</strong><strong><br/>
</strong><strong> proto=WPA</strong><strong><br/>
</strong><strong> key_mgmt=WPA-PSK</strong><strong><br/>
</strong><strong> psk=passwordOfNetwork</strong><strong><br/>
</strong><strong> priority=5</strong><strong><br/>
</strong><strong>} </strong><br/></p>

<p><span style="color: #0000ff;">#You should change values if the network is in WPA2 for example.. </span></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Networked Services memo]]></title>
    <link href="http://www.robindavid.fr/blog/2010/11/14/networked-services/"/>
    <updated>2010-11-14T00:00:00+00:00</updated>
    <id>http://www.robindavid.fr/blog/2010/11/14/networked-services</id>
    <content type="html"><![CDATA[<h3>Basic admin</h3>




<ul>
    <li><strong>?</strong> -&gt; wildcard for one char</li><br/>
    <li><strong>chgrp</strong>: change the group of a file or a folder</li><br/>
    <li><strong>du -s -h [folder] </strong> give you the total file size of the folder or a file</li><br/>
    <li><strong>umask</strong> example to give rwx-r-x---x (751) umask -&gt; 026</li><br/>
    <li><strong>sort -n -k 4 -t ":"</strong> : sort numerically using the column 4 using the character separator ":"</li><br/>
    <li><strong>find /home -newer file </strong> Find in /home files newer than "file"</li><br/>
    <li><strong>find /usr/ -size -2 -exec cp {} /home/ \; </strong> find in /usr files lower than 2 blocs and copy them to /home/</li><br/>
    <li><strong>egrep "a.*e.*i.*u.*o" /root/words </strong> grep lines containing in the order a e i o u</li><br/>
    <li><strong>egrep "(.{4}).*\1" /root/words </strong> grep lines containing at least two times the same pattern of 4 chars</li><br/>
    <li><strong>pidof syslogd </strong> get the pidof syslog</li><br/>
    <li><strong>chkconfig --list</strong> list the services theirs run level etc</li><br/>
    <li><strong>tcpdump -i eth0 not port 23 and not port 22 </strong> capture traffic of eth0 but not incoming from port 22 and 23</li><br/>
    <li><strong>ip route</strong>: show a basic routing table</li>
</ul>


<br/><br/>




<h3>Networking</h3>


<ul>
    <li>Configuring manually ip with ifconfig:
<ul>
    <li><strong>ifconfig eth0 10.0.50.10 broadcast 10.0.50.255 netmask 255.255.255.0</strong></li>
</ul>
</li><br/>
    <li>Configuring manually ip with ip:
<ul>
    <li><strong>ip route append 10.0.50.10 dev eth0 table main</strong></li>
    <li><strong>ip route append default via 10.0.50.254</strong></li>
</ul>
</li><br/>
    <li><strong>route -n</strong>: show the routing table</li><br/><li><strong>cat /proc/net/arp</strong>: show MAC address, in memory</li>
    <li>Run level directory: <strong>/etc/rd?.d</strong></li>
    <li>Runlevel states are:</li>
    <li>
<ul>
    <li>– D uninterruptible sleep (usually IO)</li>
    <li>– R runnable (on run queue)</li>
    <li>– S sleeping</li>
    <li>– T traced or stopped</li>
    <li>– W paging</li>
    <li>– X dead</li>
    <li>– Z a defunct ("zombie") process</li>
    <li>– W has no resident pages</li>
    <li>– &lt; high-priority process</li>
    <li>– N low-priority task</li>
    <li>– L has pages locked into memory (for real-time and custom IO)</li>
</ul>
</li><br/>
    <li>Change runlevel for X:
<ul>
    <li><strong>chkconfig --levels 345 X off</strong></li>
</ul>
</li>
</ul>


<br/><br/>


<h3>Firewall</h3>


<h1>!/bin/bash<br/></h1>

<br/>


<p>iptables -F INPUT<br/>
iptables -F OUTPUT<br/>
iptables -F FORWARD<span style="color: #0000ff;">#flush all rules</span><br/></p>

<br/>


<p>iptables -P INPUT ACCEPT<br/>
iptables -P OUTPUT ACCEPT<br/>
iptables -P FORWARD DROP<span style="color: #0000ff;">#define a default policy for a chain</span><br/></p>

<br/>


<p>iptables -A INPUT -i eth0 -p tcp &mdash;dport http -j DROP <span style="color: #0000ff;">#drop all the incoming http traffic on eth0</span><br/>
iptables -A INPUT -i eth0 -p tcp -s 20.0.0.0/24 -j DROP <span style="color: #0000ff;">#drop all incoming connection from the given network</span><br/></p>

<br/>


<p>iptables -A INPUT -p icmp &mdash;icmp-type echo-request -m limit &mdash;limit 1/second -j ACCEPT<br/>
iptables -A INPUT -p icmp &mdash;icmp-type echo-request -j DROP <span style="color: #0000ff;">#accept ping at a limit of 1 per second</span><br/></p>

<br/>


<p>iptables -A INPUT -i eth0 -p tcp &mdash;dport ssh -s ! 10.200.0.1 -j REJECT<span style="color: #0000ff;">#reject all incoming ssh connection except coming from 10.200.0.1(don&rsquo;t mean it&rsquo;s accepted</span><br/>
iptables -A INPUT -i eth0 -p tcp &mdash;dport ssh -s ! 10.0.0.0/16 -j ACCEPT<span style="color: #0000ff;">#accept all incoming ssh connection which come from anywhere else than 10.0.0.0/16 (so 10.200.0.1 accepted)</span><br/></p>

<br/>


<p>iptables -A INPUT -m state &mdash;state ESTABLISHED,RELATED -j ACCEPT<span style="color: #0000ff;">#accpet incoming, related or established connection</span><br/></p>

<br/><br/>




<h3>Apache</h3>


<ul>
    <li><strong>UserDir disable</strong> Comment it in httpd.conf or apache2.conf to allow users public_html</li>
    <li><strong>NameVirtualHost *:80</strong> Uncomment it in the case it is</li>
    <li><strong>Basic virtual host</strong></li>
</ul>


<div id="_mcePaste" style="padding-left: 30px;">&lt;VirtualHost *:80&gt;</div>


<div id="_mcePaste" style="padding-left: 60px;">ServerAdmin robin@robindavid.fr</div>


<div id="_mcePaste" style="padding-left: 60px;">DocumentRoot /home/robin/public_html/web</div>


<div id="_mcePaste" style="padding-left: 60px;">ServerName mywebsite.robindavid.fr</div>


<div style="padding-left: 60px;">ErrorLog logs/mywebsite.robindavid.fr-error_log</div>


<div id="_mcePaste" style="padding-left: 60px;">CustomLog logs/mywebsite.robindavid.fr-access_log common</div>


<div id="_mcePaste" style="padding-left: 30px;">&lt;/VirtualHost&gt;</div>


<div></div>


<br/>


<div>
<ul>
    <li><strong>More complex virtual host</strong></li>
</ul>
<div style="padding-left: 30px;">&lt;VirtualHost *:80&gt;</div>
<div style="padding-left: 60px;">ServerAdmin robin@robindavid.fr</div>
<div id="_mcePaste" style="padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 60px; margin: 0px;">DocumentRoot /home/robin/public_html/web</div>
<div id="_mcePaste" style="padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 60px; margin: 0px;">ServerName mywebsite.robindavid.fr</div>
<div>
<div style="padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 60px; margin: 0px;">ErrorLog logs/mywebsite.robindavid.fr-error_log</div>
<div id="_mcePaste" style="padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 60px; margin: 0px;">CustomLog logs/mywebsite.robindavid.fr-access_log common</div>
</div>
<div style="padding-left: 60px;">ServerAlias web.robindavid.fr <span style="color: #0000ff;">#give virtual host alias</span></div>
<div style="padding-left: 60px;"><span style="color: #0000ff;"> </span>RewriteEngine on<span style="white-space: pre;"> </span><span style="color: #0000ff;">#activate rewrite engine</span></div>
<div style="padding-left: 60px;"><span style="color: #0000ff;"> </span>RewriteCond %{HTTP_HOST} ^website\.<span style="white-space: pre;"> </span><span style="color: #0000ff;">#if host address start by website</span><span style="white-space: pre;"> </span></div>
<div style="padding-left: 60px;"><span style="white-space: pre;"> </span>RewriteCond %{REQUEST_URI} !~robin<span style="white-space: pre;"> </span><span style="color: #0000ff;">#and uri does not contain ~robin</span></div>
<div style="padding-left: 60px;"><span style="color: #0000ff;"> </span>RewriteRule ^(.*)$ http://redirect.robindavid.fr$1 [L,R]<span style="white-space: pre;"> </span><span style="color: #0000ff;">#redirect the host to the given host keeping the same path</span></div>
<div style="padding-left: 30px;">&lt;/VirtualHost&gt;</div>
<div style="padding-left: 30px;"></div><br/><br/>

<div>
<ul>
    <li>Allow user to use authentication. Add before # &lt;Directory /home/*/public_html&gt;:</li>
</ul>
<div style="padding-left: 60px;">&lt;Directory /home/*/public_html&gt;</div>
<div style="padding-left: 60px;">AllowOverride AuthConfig</div>
<div style="padding-left: 60px;">&lt;/Directory&gt;</div>
<div style="padding-left: 60px;"></div>
</div><br/>

<div>
<ul>
    <li><strong>htpasswd -s mypassfile richard</strong>
<ul>
    <li>#add user richard in mypassfile</li>
    <li># -s force usage of SHA(optionnal)</li>
</ul>
</li>
</ul>
</div><br/>
<div>
<ul>
    <li>Then in the folder you want to secure create a file .htaccess and put in:</li>
</ul>
<div style="padding-left: 30px;">AuthType Basic</div>
<div style="padding-left: 30px;">AuthName "Restricted Fodler !"</div>
<div style="padding-left: 30px;">AuthUserFile /home/robin/mypassfile</div>
<div style="padding-left: 30px;">Require user richard</div>
<div style="padding-left: 30px;"></div>
</div>
</div>


<ul>
    <li>For groups it's quite the same create a file in call mygroup
<ul>
    <li>put in magic: richard</li>
    <li>mean that richard is in the group magic</li>
</ul>
</li>
</ul>


<ul>
    <li>And the two following lines to the existing .htaccess
<ul>
    <li>AuthGroupFile /home/robin/mygroup</li>
    <li>Require group magic</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Repair grub 2 with chroot]]></title>
    <link href="http://www.robindavid.fr/blog/2010/10/15/repair-grub-2-with-chroot/"/>
    <updated>2010-10-15T00:00:00+00:00</updated>
    <id>http://www.robindavid.fr/blog/2010/10/15/repair-grub-2-with-chroot</id>
    <content type="html"><![CDATA[<ul>
    <li><strong>mount -o bind /dev /mnt/dev</strong></li>
    <li><strong>mount -o bind /proc /mnt/proc</strong></li>
    <li><strong>mount sysfs /mnt/sys -t sysfs</strong></li>
    <li><strong>chroot /bin/bash /</strong></li>
</ul>




<p>and in the chrooted shell :</p>




<ul>
    <li><strong>grub-install /dev/sda</strong></li>
    <li><strong>grub-setup</strong></li>
    <li><strong>update-grub2</strong></li>
</ul>


<p><span style="color: #0000ff;">Note: In this example I install the MBR on /dev/sda but if it's not your case you can change.</span></p>

]]></content>
  </entry>
  
</feed>
